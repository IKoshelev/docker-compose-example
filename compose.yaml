version: "3.8"

services:

  dotnet-sdk:
    build:
      context: ./app # see ./app/Dockerfile
    ports:
      - 8080:8080
    volumes:
      - type: bind
        source: ./app
        target: /source/app
    secrets:
      - ms-sql-db-password
    environment:
      - IS_DOCKER=TRUE
    # depends_on:
    #    ms-sql-db:
    #      condition: service_healthy
    
  ms-sql-db:
    image: mcr.microsoft.com/mssql/server:2022-CU9-ubuntu-20.04
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    secrets:
      - ms-sql-db-password
    # if you want to store DB file and log in host - 
    # put them into /var/opt/mssql-mount
    volumes:
      - type: volume
        source: ms-sql-db-data
        target: /var/opt/mssql
      - type: bind
        source: ./infrastructure/ms-sql-db/mount
        target: /var/opt/mssql-mount
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD_FILE=/run/secrets/ms-sql-db-password 
    ## switch from ports to expose if you don't need to access DB from hosting machine
    #expose:
    #  - 1433
    ports:
      - 1433:1433
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $(cat /run/secrets/ms-sql-db-password) -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
      
## we wil mount folder instead 
volumes:
  ms-sql-db-data:
secrets:
  ms-sql-db-password:
    file: infrastructure/ms-sql-db/password.txt

